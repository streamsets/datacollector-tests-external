{
  "pipelineConfig" : {
    "schemaVersion" : 1,
    "version" : 3,
    "uuid" : "04191971-368c-4e73-8572-e3508bcf92ea",
    "description" : "",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "memoryLimit",
      "value" : "${jvm:maxMemoryMB() * 0.65}"
    }, {
      "name" : "memoryLimitExceeded",
      "value" : "STOP_PIPELINE"
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ ]
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-hdp_2_3-lib::com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget::1"
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 1024
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:PermSize=128M -XX:MaxPermSize=256M -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    } ],
    "uiInfo" : {
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : 10,
        "timeout" : 10000,
        "writeToDestinations" : false,
        "showHeader" : false,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "stages" : [ {
      "instanceName" : "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource1486595372640",
      "library" : "streamsets-datacollector-cdh_kafka_1_2_0-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource",
      "stageVersion" : "2",
      "configuration" : [ {
        "name" : "metadataBrokerList",
        "value" : "localhost:9092"
      }, {
        "name" : "zookeeperConnect",
        "value" : "localhost:2181"
      }, {
        "name" : "consumerGroup",
        "value" : "streamsetsDataCollector"
      }, {
        "name" : "topic",
        "value" : "topicName"
      }, {
        "name" : "dataFormat",
        "value" : "JSON"
      }, {
        "name" : "charset",
        "value" : "UTF-8"
      }, {
        "name" : "removeCtrlChars",
        "value" : false
      }, {
        "name" : "produceSingleRecordPerMessage",
        "value" : false
      }, {
        "name" : "maxBatchSize",
        "value" : 1000
      }, {
        "name" : "maxWaitTime",
        "value" : 2000
      }, {
        "name" : "kafkaConsumerConfigs",
        "value" : [ ]
      }, {
        "name" : "textMaxLineLen",
        "value" : 1024
      }, {
        "name" : "jsonContent",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "jsonMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "csvMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "csvCustomDelimiter",
        "value" : "|"
      }, {
        "name" : "csvCustomEscape",
        "value" : "\\"
      }, {
        "name" : "csvCustomQuote",
        "value" : "\""
      }, {
        "name" : "csvRecordType",
        "value" : "LIST_MAP"
      }, {
        "name" : "xmlRecordElement",
        "value" : null
      }, {
        "name" : "xmlMaxObjectLen",
        "value" : 4096
      }, {
        "name" : "logMode",
        "value" : "COMMON_LOG_FORMAT"
      }, {
        "name" : "logMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "retainOriginalLine",
        "value" : false
      }, {
        "name" : "customLogFormat",
        "value" : "%h %l %u %t \"%r\" %>s %b"
      }, {
        "name" : "regex",
        "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
      }, {
        "name" : "fieldPathsToGroupName",
        "value" : [ {
          "fieldPath" : "/",
          "group" : 1
        } ]
      }, {
        "name" : "grokPatternDefinition",
        "value" : null
      }, {
        "name" : "grokPattern",
        "value" : "%{COMMONAPACHELOG}"
      }, {
        "name" : "onParseError",
        "value" : "ERROR"
      }, {
        "name" : "maxStackTraceLines",
        "value" : 50
      }, {
        "name" : "enableLog4jCustomLogFormat",
        "value" : false
      }, {
        "name" : "log4jCustomLogFormat",
        "value" : "%r [%t] %-5p %c %x - %m%n"
      }, {
        "name" : "schemaInMessage",
        "value" : true
      }, {
        "name" : "avroSchema",
        "value" : null
      }, {
        "name" : "binaryMaxObjectLen",
        "value" : 1024
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "SOURCE",
        "rawSource" : {
          "configuration" : [ {
            "name" : "brokerHost",
            "value" : "localhost"
          }, {
            "name" : "brokerPort",
            "value" : 9092
          }, {
            "name" : "topic",
            "value" : "myTopic"
          }, {
            "name" : "partition"
          }, {
            "name" : "maxWaitTime",
            "value" : 1000
          } ]
        },
        "description" : "",
        "label" : "Kafka Consumer 1",
        "xPos" : 60
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource1486595372640OutputLane14865953726400" ]
    }, {
      "instanceName" : "com_streamsets_pipeline_stage_destination_devnull_NullDTarget1486595376770",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_NullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "description" : "",
        "label" : "Trash 1",
        "xPos" : 280,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ "com_streamsets_pipeline_stage_origin_kafka_KafkaDSource1486595372640OutputLane14865953726400" ],
      "outputLanes" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget1486595386291",
      "library" : "streamsets-datacollector-hdp_2_3-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_kafka_ToErrorKafkaDTarget",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "metadataBrokerList",
        "value" : "localhost:9092"
      }, {
        "name" : "runtimeTopicResolution",
        "value" : false
      }, {
        "name" : "topicExpression",
        "value" : "${record:value('/topic')}"
      }, {
        "name" : "topicWhiteList",
        "value" : "*"
      }, {
        "name" : "topic",
        "value" : "topicName"
      }, {
        "name" : "partitionStrategy",
        "value" : "ROUND_ROBIN"
      }, {
        "name" : "partition",
        "value" : "${0}"
      }, {
        "name" : "singleMessagePerBatch",
        "value" : false
      }, {
        "name" : "csvFileFormat",
        "value" : "CSV"
      }, {
        "name" : "kafkaProducerConfigs",
        "value" : [ {
          "key" : "queue.buffering.max.ms",
          "value" : "5000"
        }, {
          "key" : "message.send.max.retries",
          "value" : "10"
        }, {
          "key" : "retry.backoff.ms",
          "value" : "1000"
        } ]
      }, {
        "name" : "csvHeader",
        "value" : "NO_HEADER"
      }, {
        "name" : "csvReplaceNewLines",
        "value" : true
      }, {
        "name" : "jsonMode",
        "value" : "MULTIPLE_OBJECTS"
      }, {
        "name" : "textFieldPath",
        "value" : "/"
      }, {
        "name" : "textEmptyLineIfNull",
        "value" : false
      }, {
        "name" : "avroSchema",
        "value" : null
      }, {
        "name" : "includeSchema",
        "value" : true
      }, {
        "name" : "binaryFieldPath",
        "value" : "/"
      } ],
      "uiInfo" : {
        "description" : "",
        "label" : "Bad Records - Write to Kafka",
        "xPos" : 500,
        "yPos" : 50,
        "stageType" : "TARGET"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ]
    },
    "info" : {
      "name" : "KafkaConsumer_Trash_1_1",
      "description" : "",
      "created" : 1486595368634,
      "lastModified" : 1486595386810,
      "creator" : "anonymous",
      "lastModifier" : "anonymous",
      "lastRev" : "0",
      "uuid" : "04191971-368c-4e73-8572-e3508bcf92ea",
      "valid" : true
    },
    "previewable" : true,
    "valid" : true,
    "issues" : {
      "issueCount" : 0,
      "stageIssues" : { },
      "pipelineIssues" : [ ]
    }
  },
  "pipelineRules" : {
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Bad Records",
      "metricId" : "pipeline.batchErrorRecords.meter",
      "metricType" : "METER",
      "metricElement" : "METER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Error Messages",
      "metricId" : "pipeline.batchErrorMessages.meter",
      "metricType" : "METER",
      "metricElement" : "METER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    }, {
      "id" : "memoryLimitAlertID",
      "alertText" : "Memory limit for pipeline exceeded",
      "metricId" : "pipeline.memoryConsumed.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > (jvm:maxMemoryMB() * 0.65)}",
      "sendEmail" : false,
      "enabled" : false,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "emailIds" : [ ],
    "uuid" : "cc8e49ea-5d94-4c06-8cf8-07d1c9d32fb7",
    "ruleIssues" : [ ]
  }
}